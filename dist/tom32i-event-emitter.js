/*!
 * tom32i-event-emitter.js - 3.0.0
 * https://github.com/Tom32i/event-emitter.js
 * Copyright 2016 Thomas JARRAND
 */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.EventEmitter=t():e.EventEmitter=t()}(this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return e[r].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}var o=n(1),i=r(o);e.exports=i.default},function(e,t){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=function(){function e(){n(this,e),this._events=new Map,this.on=this.addEventListener,this.off=this.removeEventListener}return r(e,[{key:"emit",value:function(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];this._events.has(e)&&this._events.get(e).forEach(function(e){return e.apply(void 0,n)})}},{key:"addEventListener",value:function(e,t){this._events.has(e)?this._events.get(e).add(t):this._events.set(e,new Set([t]))}},{key:"removeEventListener",value:function(e,t){if(this._events.has(e)){var n=this._events.get(e);n.delete(t),0===n.size&&this._events.delete(e)}}}]),e}();t.default=o}])});
//# sourceMappingURL=tom32i-event-emitter.js.map